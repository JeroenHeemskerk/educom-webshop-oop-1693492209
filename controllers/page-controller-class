<?php
include_once 'models/page-model-class';
include_once 'models/user-model-class';
include_once 'models/shop-model-class';

include_once 'models/crud.php';
include_once 'models/usercrud.php';

class PageController{
    private $model;
    public $product;
    public $products;
    public $carts;
    public $total;
    public $cartLines; 

    public function __construct($modelfactory) {
        $this -> modelfactory = $modelfactory;
        $this -> model = $this -> modelfactory -> getmodel('page');
    }
    public function HandleRequests(){
        $this -> GetRequest();
        $this -> ProcessRequest();
        $this -> ShowResponse();
    }
    private function GetRequest(){
        $this -> model -> GetRequestedPage();
    }
    private function ProcessRequest(){
        switch ($this -> model -> page){
            case 'shoppingcart':
                $this -> model = new ShopModel($this -> model);
                $this -> model -> handleActions();
                $this -> carts = $this -> model -> requestCart();
                foreach ($this -> carts as $key => $quantity) {
                    $product = $this -> model -> GetProductById($key); 
                    $this -> cartLine = array("id" => $product["id"], "name" => $product["name"], "quantity" => $quantity, "price" => $product["price"], "description" => $product["description"], "filename" => $product["filename"], 'subTotal' => ($quantity * $product['price']));
                    $this -> model -> cartLines[] = $this -> cartLine;
                    $this -> model -> total += $this -> cartLine['subTotal'];
                }
                break;
            case 'top5':
                $this -> model = new ShopModel($this -> model);
                try {
                    $this -> carts = $this -> model -> GetTop5Products();
                } 
                catch (Exception $e) {
                    $this -> model -> genericErr = "Kan de top 5 producten niet ophalen, probeer het later nogmaals";
                    echo("Error collecting carts: " . $e -> getMessage());
                }
                break;
            case 'webshop':
                $this -> model = new ShopModel($this -> model);
                try {
                    $this -> products = $this -> model -> GetAllProducts();
                } 
                catch (Exception $e) {
                    $this -> model -> genericErr = "Kan de producten niet ophalen, probeer het later nogmaals";
                    LogDebug("Error collecting products: " . $e -> getMessage());
                }
                $this -> model -> handleActions();
                break;
            case 'webshopitem':
                $this -> model = new ShopModel($this -> model);
                try {
                    $productId = $this -> model -> GetUrlVar("row"); 
                    $this -> product = $this ->  model -> GetProductById($productId); 
                } 
                catch (Exception $e) {
                    $this -> model -> genericErr = "Kan dit product niet ophalen, probeer het later nogmaals";
                    LogDebug("Error collecting product with id " . $row . ": " . $e -> getMessage());
                }
                break;
            case 'contact':
                $this -> model = new UserModel($this -> model);
                $this -> model -> ValidateContact();
                break;
            case 'changepassword':
                $usercrud = $this -> modelfactory -> crudfactory -> getcrud('usercrud');
                $this -> model = new UserModel($this -> model, $usercrud);
                $this -> model -> CheckPassword();
                if($this -> model -> passwordvalid){
                    $this -> model -> UpdateUser($this -> model -> userId, $this -> model -> password);
                    $this -> model -> setPage("home");
                }
                break;
            case 'register':
                $usercrud = $this -> modelfactory -> crudfactory -> getcrud('usercrud');
                $this -> model = new UserModel($this -> model, $usercrud);
                $this -> model -> CheckRegister();
                if($this -> model -> registervalid){
                    $this -> model -> SaveUser();
                    $this -> model -> setPage("login");
                }
                break;
            case 'login':
                $usercrud = $this -> modelfactory -> crudfactory -> getcrud('usercrud');
                $this -> model = new UserModel($this -> model, $usercrud);
                $this -> model -> validateLogin();
                if($this -> model -> loginvalid){
                    $this -> model -> LoginUser();
                    $this -> model -> setPage("home");
                } 
                break;
            case 'logout':
                $this -> model = new UserModel($this -> model);
                $this -> model -> LogoutUser();
                $this -> model -> setPage("home");
                break;
            case 'addproduct':
                $this -> model = new ShopModel($this -> model);
                $this -> model -> validateProduct();
                if($this -> model -> productvalid){
                    $this -> model -> SaveProduct();
                    $this -> model -> setPage("home");
                } 
                break;
        }
    }
    public function Menu(){
        return $this -> model -> createMenu(); 
    }

    private function ShowResponse(){
        switch ($this -> model -> page){
            case 'home':
                require_once('views/HomeDoc.php');
                $view = new HomeDoc($this -> model);
                break;
            case 'about':
                require_once('views/AboutDoc.php');
                $view = new AboutDoc($this -> model);
                break;
            case 'contact':
                require_once('views/ContactDoc.php');
                $view = new ContactDoc($this -> model);
                break;
            case 'webshop':
                require_once('views/WebshopDoc.php');
                $view = new WebshopDoc($this -> model);
                break;
            case 'webshopitem':
                require_once('views/WebshopItemDoc.php');
                $view = new WebshopItemDoc($this -> model);
                break;
            case 'top5':
                require_once('views/Top5Doc.php');
                $view = new Top5Doc($this -> model);
                break;
            case 'shoppingcart':
                require_once('views/ShoppingcartDoc.php');
                $view = new ShoppingcartDoc($this -> model);
                break;
            case 'changepassword':
                require_once('views/ChangePasswordDoc.php');
                $view = new ChangePasswordDoc($this -> model);
                break;
            case 'register':
                require_once('views/RegisterDoc.php');
                $view = new RegisterDoc($this -> model);
                break;
            case 'login':
                require_once('views/LoginDoc.php');
                $view = new LoginDoc($this -> model);
                break;
            case 'addproduct':
                require_once('views/AddProductDoc.php');
                $view = new AddProductDoc($this -> model);
                break;
        }
        $view -> show();
    }
}